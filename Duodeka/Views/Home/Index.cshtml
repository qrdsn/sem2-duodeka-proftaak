@using DuodekaModels.Items
@model Duodeka.Models.MainPageModel

@*@Html.Partial("~/Views/Home/_TreeViewPartial.cshtml", Model.TreeView)*@

<div class="d-flex flex-row p-0">

    <!-- treeview -->
    <div class="col-4">
        @*@Html.Partial("~/Views/Home/_TreeViewPartial.cshtml", (TreeNodeModel[])Model.TreeView);*@
    </div>

    <!-- explorer view -->
    <div class="tab-pane col-8" id="files">
        <table class="table table-hover">
          <thead>
            <tr>
              <th scope="col">ItemName</th>
              <th scope="col">Date Created</th>
              <th scope="col">Creator Name</th>
              <th scope="col">Size</th>
            </tr>
          </thead>
          <tbody id="filesBody">
            <!-- content of current directory comes here -->
          </tbody>
        </table>
    </div>

</div>

<script type="text/template" data-template="filesCollaborator">
    <tr id="files-${collaboratorID}">
        <td>
            <i class="bi bi-${iconName}"></i>
           ${itemName}</td>
           <td>${dateCreated}</td>
           <td>${creatorName}</td>
           <td>${size}</td>
      </tr>
</script>
<script type="text/javascript" defer>
    //json data
    var filesData = @Html.Raw(Json.Serialize(Model.Rows));

    function LoadFilesInExplorer(files)
    {
        //reload visuals
        $('#filesBody').empty();
        LoadFromTemplate(files, 'filesCollaborator', 'filesBody');
    }

    //document ready
    $(() => {
        ReloadTreeNodes(treeNodes)
    })


</script>